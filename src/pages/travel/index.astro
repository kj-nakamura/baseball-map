---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';

const travels = await getCollection('travel');
const sortedTravels = travels.sort((a, b) =>
  a.data.title.localeCompare(b.data.title)
);

// チーム名とリーグのマッピング
const teamInfo = {
  'tokyo-giants': { name: '読売ジャイアンツ', icon: '🏯', league: 'central', prefecture: '東京都' },
  'tokyo-swallows': { name: '東京ヤクルトスワローズ', icon: '🎨', league: 'central', prefecture: '東京都' },
  'yokohama': { name: '横浜DeNAベイスターズ', icon: '🌉', league: 'central', prefecture: '神奈川県' },
  'osaka-tigers': { name: '阪神タイガース', icon: '🐅', league: 'central', prefecture: '兵庫県' },
  'nagoya': { name: '中日ドラゴンズ', icon: '🏰', league: 'central', prefecture: '愛知県' },
  'hiroshima': { name: '広島東洋カープ', icon: '⛩️', league: 'central', prefecture: '広島県' },
  'hokkaido': { name: '北海道日本ハムファイターズ', icon: '🏔️', league: 'pacific', prefecture: '北海道' },
  'osaka-2days': { name: 'オリックス・バファローズ', icon: '🐃', league: 'pacific', prefecture: '大阪府' },
  'saitama': { name: '埼玉西武ライオンズ', icon: '🌸', league: 'pacific', prefecture: '埼玉県' },
  'chiba-lotte': { name: '千葉ロッテマリーンズ', icon: '🌊', league: 'pacific', prefecture: '千葉県' },
  'chiba': { name: '千葉ロッテマリーンズ', icon: '🌊', league: 'pacific', prefecture: '千葉県' },
  'miyagi': { name: '東北楽天ゴールデンイーグルス', icon: '🦅', league: 'pacific', prefecture: '宮城県' },
  'fukuoka': { name: '福岡ソフトバンクホークス', icon: '🍜', league: 'pacific', prefecture: '福岡県' }
};

function getTeamInfo(slug) {
  // より正確なマッチングのため、より長いキーから試す
  const sortedKeys = Object.keys(teamInfo).sort((a, b) => b.length - a.length);
  const teamKey = sortedKeys.find(key => slug.includes(key));
  return teamKey ? { key: teamKey, ...teamInfo[teamKey] } : { 
    key: '', 
    name: '球団未定', 
    icon: '⚾', 
    league: 'central',
    prefecture: '未定'
  };
}

// セ・リーグとパ・リーグに分けて整理
const centralTravels = sortedTravels.filter(travel => {
  const info = getTeamInfo(travel.slug);
  return info.league === 'central';
});

const pacificTravels = sortedTravels.filter(travel => {
  const info = getTeamInfo(travel.slug);
  return info.league === 'pacific';
});
---

<BaseLayout
  title="モデルコース一覧 - プロ野球観戦旅行プラン"
  description="全12球団の観戦＋観光モデルコース。野球観戦と各地の魅力を満喫する旅行プランの決定版。"
>
  <header class="travel-hero">
    <div class="hero-overlay">
      <div class="hero-content">
        <h1 class="hero-title">⚾ プロ野球観戦旅行</h1>
        <h2 class="hero-subtitle">モデルコース一覧</h2>
        <p class="hero-description">
          野球観戦と各地の魅力を組み合わせた、充実の旅行プランをご提案
        </p>
        <div class="hero-stats">
          <div class="stat-item">
            <span class="stat-number">12</span>
            <span class="stat-label">球団</span>
          </div>
          <div class="stat-item">
            <span class="stat-number">{sortedTravels.length}</span>
            <span class="stat-label">プラン</span>
          </div>
          <div class="stat-item">
            <span class="stat-number">1-3泊</span>
            <span class="stat-label">コース</span>
          </div>
        </div>
      </div>
    </div>
  </header>

  <main class="travel-main">
    <!-- フィルター -->
    <section class="filter-section">
      <div class="filter-container">
        <h3 class="filter-title">🔍 プランを絞り込む</h3>
        <div class="filter-groups">
          <div class="filter-group">
            <label class="filter-label">リーグ</label>
            <div class="filter-buttons">
              <button class="filter-btn active" data-filter="all">すべて</button>
              <button class="filter-btn" data-filter="central">セ・リーグ</button>
              <button class="filter-btn" data-filter="pacific">パ・リーグ</button>
            </div>
          </div>
          <div class="filter-group">
            <label class="filter-label">宿泊日数</label>
            <div class="filter-buttons">
              <button class="filter-btn active" data-duration="all">すべて</button>
              <button class="filter-btn" data-duration="1泊2日">1泊2日</button>
              <button class="filter-btn" data-duration="2泊3日">2泊3日</button>
            </div>
          </div>
        </div>
      </div>
    </section>

    <!-- 全プラン表示エリア -->
    <section class="all-plans-section">
      <div class="league-header">
        <h2 class="league-title" id="results-title">📋 全プラン一覧</h2>
        <p class="league-description" id="results-description">すべての野球観戦旅行プランを一覧でご確認いただけます</p>
      </div>

      <div class="course-grid" id="filtered-results">
        {sortedTravels.map((travel) => {
          const info = getTeamInfo(travel.slug);
          const cardClass = info.league === 'pacific' ? 'pacific-league' : 'central-league';
          
          return (
            <article class={`course-card ${cardClass}`} data-league={info.league} data-duration={travel.data.duration}>
              <div class="course-image">
                <div class="course-icon">{info.icon}</div>
                <div class="course-badge">{info.prefecture}</div>
              </div>
              <div class="course-content">
                <h3 class="course-title">{travel.data.title}</h3>
                <p class="course-team">{info.name}</p>
                <p class="course-description">{travel.data.description}</p>
                <div class="course-details">
                  <span class="course-duration">{travel.data.duration}</span>
                  <span class="course-budget">{travel.data.cost.budget}</span>
                </div>
                <a href={`/travel/${travel.slug}`} class="course-link">
                  詳細を見る <span class="link-arrow">→</span>
                </a>
              </div>
            </article>
          );
        })}
      </div>
    </section>

    <!-- 以前のセクションは削除し、フィルター対応の統合表示に変更 -->

    <!-- プラン比較 -->
    <section class="comparison-section">
      <div class="comparison-header">
        <h2 class="comparison-title">💡 プラン選びのコツ</h2>
        <p class="comparison-description">
          あなたにぴったりの観戦旅行プランを見つけよう
        </p>
      </div>

      <div class="comparison-grid">
        <div class="comparison-card">
          <div class="comparison-icon">💰</div>
          <h3>予算重視</h3>
          <p>3-6万円の低予算プラン</p>
          <ul class="comparison-list">
            <li>埼玉のんびりコース</li>
            <li>千葉マリンコース</li>
            <li>名古屋グルメコース</li>
          </ul>
        </div>

        <div class="comparison-card">
          <div class="comparison-icon">🍽️</div>
          <h3>グルメ重視</h3>
          <p>ご当地グルメを堪能</p>
          <ul class="comparison-list">
            <li>大阪食い倒れコース</li>
            <li>名古屋グルメコース</li>
            <li>宮城グルメコース</li>
            <li>福岡グルメコース</li>
          </ul>
        </div>

        <div class="comparison-card">
          <div class="comparison-icon">🏛️</div>
          <h3>観光重視</h3>
          <p>歴史・文化を満喫</p>
          <ul class="comparison-list">
            <li>東京王道観光コース</li>
            <li>平和・宮島満喫コース</li>
            <li>大阪・神戸満喫コース</li>
          </ul>
        </div>

        <div class="comparison-card">
          <div class="comparison-icon">🌟</div>
          <h3>特別体験重視</h3>
          <p>ここでしかできない体験</p>
          <ul class="comparison-list">
            <li>北海道大自然コース</li>
            <li>東京モダン観光コース</li>
            <li>横浜みなとみらいコース</li>
          </ul>
        </div>
      </div>
    </section>

    <!-- CTA -->
    <section class="cta-section">
      <div class="cta-content">
        <h2 class="cta-title">⚾ 野球観戦旅行をはじめよう</h2>
        <p class="cta-description">
          お気に入りの球団、行きたい場所から旅行プランを選んで、最高の観戦旅行体験を始めましょう。
        </p>
        <div class="cta-buttons">
          <a href="/guides" class="cta-button primary">観戦ガイドを見る</a>
          <a href="/" class="cta-button secondary">球場マップに戻る</a>
        </div>
      </div>
    </section>
  </main>
</BaseLayout>

<style>
  @import './index.css';
  
  /* フィルターセクションのスタイル */
  .filter-section {
    background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
    padding: 2rem 1rem;
    margin: 2rem -1rem;
    border-radius: 20px;
  }
  
  .filter-container {
    max-width: 1200px;
    margin: 0 auto;
  }
  
  .filter-title {
    text-align: center;
    color: #2c3e50;
    font-size: 1.5rem;
    margin-bottom: 1.5rem;
    font-weight: 600;
  }
  
  .filter-groups {
    display: flex;
    gap: 3rem;
    justify-content: center;
    flex-wrap: wrap;
  }
  
  .filter-group {
    text-align: center;
  }
  
  .filter-label {
    display: block;
    font-weight: 600;
    color: #2c3e50;
    margin-bottom: 0.8rem;
    font-size: 1.1rem;
  }
  
  .filter-buttons {
    display: flex;
    gap: 0.5rem;
    flex-wrap: wrap;
    justify-content: center;
  }
  
  .filter-btn {
    padding: 0.6rem 1.2rem;
    border: 2px solid #3498db;
    background: white;
    color: #3498db;
    border-radius: 25px;
    cursor: pointer;
    font-weight: 500;
    transition: all 0.3s;
    font-size: 0.9rem;
  }
  
  .filter-btn:hover {
    background: #3498db;
    color: white;
    transform: translateY(-1px);
  }
  
  .filter-btn.active {
    background: #3498db;
    color: white;
    box-shadow: 0 4px 12px rgba(52, 152, 219, 0.3);
  }
  
  .all-plans-section {
    margin-bottom: 3rem;
  }
  
  @media (max-width: 768px) {
    .filter-groups {
      flex-direction: column;
      gap: 2rem;
    }
    
    .filter-buttons {
      justify-content: center;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const filterButtons = document.querySelectorAll('.filter-btn');
    const courseCards = document.querySelectorAll('.course-card');
    const resultsTitle = document.getElementById('results-title');
    const resultsDescription = document.getElementById('results-description');
    
    let currentLeagueFilter = 'all';
    let currentDurationFilter = 'all';
    
    // フィルターボタンのクリックイベント
    filterButtons.forEach(button => {
      button.addEventListener('click', function() {
        const filterType = this.dataset.filter || this.dataset.duration;
        
        if (this.dataset.filter) {
          // リーグフィルター
          document.querySelectorAll('[data-filter]').forEach(btn => btn.classList.remove('active'));
          this.classList.add('active');
          currentLeagueFilter = filterType;
        } else if (this.dataset.duration) {
          // 宿泊日数フィルター
          document.querySelectorAll('[data-duration]').forEach(btn => btn.classList.remove('active'));
          this.classList.add('active');
          currentDurationFilter = filterType;
        }
        
        applyFilters();
      });
    });
    
    function applyFilters() {
      let visibleCount = 0;
      
      courseCards.forEach(card => {
        const cardLeague = card.dataset.league;
        const cardDuration = card.dataset.duration;
        
        const leagueMatch = currentLeagueFilter === 'all' || cardLeague === currentLeagueFilter;
        const durationMatch = currentDurationFilter === 'all' || cardDuration === currentDurationFilter;
        
        if (leagueMatch && durationMatch) {
          card.style.display = 'block';
          visibleCount++;
        } else {
          card.style.display = 'none';
        }
      });
      
      updateResultsTitle(visibleCount);
    }
    
    function updateResultsTitle(count) {
      let title = '📋 ';
      let description = '';
      
      if (currentLeagueFilter === 'all' && currentDurationFilter === 'all') {
        title += '全プラン一覧';
        description = 'すべての野球観戦旅行プランを一覧でご確認いただけます';
      } else {
        const leagueText = currentLeagueFilter === 'central' ? 'セ・リーグ' : 
                          currentLeagueFilter === 'pacific' ? 'パ・リーグ' : '';
        const durationText = currentDurationFilter !== 'all' ? currentDurationFilter : '';
        
        const filterTexts = [leagueText, durationText].filter(text => text).join(' ');
        title += `${filterTexts} プラン一覧`;
        description = `${filterTexts}の野球観戦旅行プラン（${count}件）`;
      }
      
      resultsTitle.textContent = title;
      resultsDescription.textContent = description;
    }
  });
</script>
